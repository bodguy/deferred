cmake_minimum_required(VERSION 3.10)
project(deferred VERSION 0.0.1)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake/")
set(EXTRA_LIB_DIR "")
set(EXTRA_INCLUDE_DIR "")
set(THIRD_PARTY_INCLUDE_DIRS "third_party/")
set(SOURCE_PREFIX "src")

if(APPLE)
  message(">>> [MESSAGE] APPLE platform")
  find_library(COCOA_LIBS Cocoa REQUIRED)
  find_library(IOKIT_LIBS IOKit REQUIRED)
  find_library(CORE_LIBS CoreVideo REQUIRED)
  list(APPEND EXTRA_LIB_DIR "${COCOA_LIBS} ${IOKIT_LIBS} ${CORE_LIBS}")
endif(APPLE)

find_package(OpenGL REQUIRED)
if(OpenGL_FOUND)
  message(">>> [MESSAGE] Find OpenGL")
  list(APPEND EXTRA_INCLUDE_DIR ${OPENGL_INCLUDE_DIR})
  list(APPEND EXTRA_LIB_DIR ${OPENGL_gl_LIBRARY})
endif()

find_package(GLEW REQUIRED)
if (GLEW_FOUND)
  message(">>> [MESSAGE] Find GLEW")
  list(APPEND EXTRA_LIB_DIR GLEW::GLEW)
endif()

find_package(GLFW3 REQUIRED)
if(GLFW3_FOUND)
  message(">>> [MESSAGE] Find GLFW3")
  list(APPEND EXTRA_INCLUDE_DIR ${GLFW3_INCLUDE_DIR})
  list(APPEND EXTRA_LIB_DIR ${GLFW3_LIBRARY})
endif()

find_package(GLM REQUIRED)
if(GLM_FOUND)
  message(">>> [MESSAGE] Find GLM")
  list(APPEND EXTRA_INCLUDE_DIR ${GLM_INCLUDE_DIR})
endif()

find_package(Freetype REQUIRED)
if(FREETYPE_FOUND)
  message(">>> [MESSAGE] Find FreeType")
  list(APPEND EXTRA_INCLUDE_DIR ${FREETYPE_INCLUDE_DIRS})
  list(APPEND EXTRA_LIB_DIR ${FREETYPE_LIBRARY})
endif()

file(GLOB_RECURSE SOURCE_FILES ${SOURCE_PREFIX}/*.h ${SOURCE_PREFIX}/*.cpp)
add_executable(${CMAKE_PROJECT_NAME} ${SOURCE_FILES})
target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE ${EXTRA_INCLUDE_DIR} ${THIRD_PARTY_INCLUDE_DIRS})
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${EXTRA_LIB_DIR})